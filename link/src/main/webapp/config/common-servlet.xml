<?xml version="1.0" encoding="UTF-8"?>

<beans	xmlns="http://www.springframework.org/schema/beans"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:mvc="http://www.springframework.org/schema/mvc"
		xsi:schemaLocation="http://www.springframework.org/schema/beans 
							http://www.springframework.org/schema/beans/spring-beans.xsd
							
							http://www.springframework.org/schema/context
							http://www.springframework.org/schema/context/spring-context.xsd
							
							http://www.springframework.org/schema/mvc
							http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!-- 	:: Client 의 Request URI와 Controller 을 연결시켜 주는 HandlerMapping  
			:: 아래와 같이 서술적 기술 Test 후 주석처리해서 Test 할것 :: Default / Zero Configuration -->
	<!--  <bean id="beanNameUrlMapping" 
	 			 class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping" /> -->

	<!-- 	::	Client 에 보여줄 Data(Model) 랜더링 / view 화면 Navigation 하는 ViewResolver 
			:: 아래와 같이 서술적 기술 Test 후 주석처리해서 Test 할것 :: Default / Zero Configuration -->	
    <!-- <bean id="viewResolver" 
    			class="org.springframework.web.servlet.view.InternalResourceViewResolver" /> -->

	 <!--	:: Client 의 요구사항을 처리할  Controller 
	 		::	http://ip:port/contextRoot/zzz.do    
	 		:: Request 시 test.HelloSpringController 실행 -->
	<context:component-scan base-package="com.link.web">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
	</context:component-scan>
	
<!-- 
	# Spring 4.X에서 사용, 5.X에서 Deprecation
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
 -->
 
 	<!-- ■ RequestMappingHandlerMapping 설정 등 기타 Annotation 기반
   	        모든 기능을 사용 할 수 있는 아래의 설정으로 변경 -->
	<mvc:annotation-driven />
 	
 	<!-- ■ Annotation 기반의 모든 기능을 사용 할 수 있는 설정
	          <mvc:annotation-driven /> 사용으로 interceptor 를 직접
	          RequestMappingHandlerMapping 에 주입 할 수 없으니 
	       	  아래의 설정방법으로 interceptor 주입-->
	       	  
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/user/**"/>
			<bean class="com.link.common.web.LogonCheckInterceptor"></bean>
		</mvc:interceptor>	
	</mvc:interceptors>

	<!-- 

 	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
	 	<property name="order"			value="0"/>
		<property name="interceptors"	ref="logonCheckInterceptor"/>
	 </bean>
	 
	  :: Interceptor 선언 : 로그인 유무확인. 
	<bean id="logonCheckInterceptor"	class="com.model2.mvc.common.web.LogonCheckInterceptor" />	 -->

	<!--  :: ViewResolver 선언 -->	
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver" />
	
	<!--	
		■ / 형식의 Mapping 은 모든(정적,동적 자원) 요청시 처리책임
		■ 정적자원 요청시 DispatcherServlet 에게 처리방법지정
	    ■ 정적자원요청 (아래의 URI 포함 요청)시  처리 경로 location 지정
	     	
	    실제 PJT 진행시 일반적으로 resources 폴더를 만들고 폴더내부에
	    css , image, js 등 넣어 관리하며 아래와 같이 1번의 설정으로 관리
	    <mvc:resources mapping="/resources/**" location="/resources/" />
	     
	    <mvc:resources location="/css/" 		mapping="/css/**"></mvc:resources>
		<mvc:resources location="/images/"		mapping="/images/**"></mvc:resources>
		<mvc:resources location="/javascript/"	mapping="/javascript/**"></mvc:resources>
	--> 
	
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- 	:: exception resolver  선언 :: 서술적 / 선언적 예외처리 
			:: Servlet 에서의 선언적 예외처리를 다시 생각하며....  -->
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.NullPointerException">/common/nullError.jsp</prop>
				<prop key="java.lang.NumberFormatException">/common/numberFormatError.jsp</prop>
			</props>
		</property>
		
		<property name="defaultErrorView"	value="/common/error.jsp" />
		
	</bean>

	<!-- 파일 업로드 추가 부분 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	<!-- 100MB -->
		
	</bean>

</beans>