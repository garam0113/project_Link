<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="NoticeMapper">
	
	<resultMap id="noticeSelectMap" type="notice">
		<result property="noticeNo" 			column="notice_no" 			jdbcType="NUMERIC"/>
		<result property="noticeTitle"			column="notice_title" 		jdbcType="VARCHAR" />
		<result property="noticeContent" 		column="notice_content" 	jdbcType="VARCHAR" />
		<result property="noticeImage1" 		column="notice_image1" 		jdbcType="VARCHAR" />
		<result property="noticeImage2" 		column="notice_image2" 		jdbcType="VARCHAR" />
		<result property="noticeRegDate" 		column="notice_regdate" 	jdbcType="DATE" />
		<result property="noticeCount" 			column="notice_count" 		jdbcType="NUMERIC" />
		<result property="clubNo"				column="club_no"			jdbcType="NUMERIC" />
	
	<association property="userId" javaType="user">
		<result property="userId" column="user_id" jdbcType="VARCHAR"/>
	</association>
	</resultMap>
	
	<!-- SQL : INSERT -->
	<insert 	id="addNotice"		parameterType="notice" >
	 	INSERT
		INTO NOTICE( NOTICE_NO  , NOTICE_TITLE , NOTICE_CONTENT , NOTICE_IMAGE1 , NOTICE_IMAGE2, NOTICE_REGDATE, NOTICE_COUNT, CLUB_NO, USER_ID)
		VALUES	 (	seq_notice_notice_no.nextval , 
					#{noticeTitle:VARCHAR}, 
					#{noticeContent:VARCHAR}, 
					#{noticeImage1:VARCHAR}, 
					#{noticeImage2:VARCHAR},
					SYSDATE, 
					#{noticeCount},
					#{clubNo},
					#{userId.userId} )

	 </insert>
	 
	 <!-- SQL : SELECT ONE -->
	 <select 	id="getNotice"	parameterType="int"	resultMap="noticeSelectMap">
	SELECT
	N.NOTICE_NO , N.NOTICE_TITLE , N.NOTICE_CONTENT , N.NOTICE_IMAGE1 , N.NOTICE_IMAGE2, N.NOTICE_REGDATE, N.NOTICE_COUNT, N.CLUB_NO, USER_ID
	FROM NOTICE N 
	WHERE n.notice_no = #{notice_no}

	 </select>
	 
 	<update id="getCount" parameterType="int">
 	UPDATE notice
 	<set>
 		notice_count = notice_count+1
 	</set>
 	WHERE notice_no = #{notice_no}
 	
 	</update>
	 

	 
	 <!-- SQL : UPDATE -->
	 <update	id="updateNotice"	parameterType="notice" >
	   	UPDATE NOTICE
	   	<set>
	   		NOTICE_TITLE 	= #{noticeTitle} ,
			NOTICE_CONTENT	= #{noticeContent},
			NOTICE_REGDATE	= SYSDATE ,
			NOTICE_IMAGE1	=	#{noticeImage1},
			NOTICE_IMAGE2   =  #{noticeImage2}
	   	</set>
	   	WHERE notice_no = #{noticeNo}
	 </update>
	 
	 <delete id="deleteNotice" parameterType="int">
	 DELETE
	 FROM notice
	 WHERE notice_no = #{noticeNo}
	 </delete>
		 
	<!-- SQL : SELECT LIST -->
	<select  id="getNoticeList"  parameterType="search"	resultMap="noticeSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT notice_no , notice_title , user_id ,notice_regdate , notice_count
											FROM notice
											<if test="searchCondition != null">
												<where>
													<if test="searchCondition == 0 and searchKeyword !='' ">
										 				LOWER(notice_no) LIKE LOWER('%${searchKeyword}%')
													</if>
													<if test="searchCondition == 1 and searchKeyword !='' ">
										 				LOWER(notice_title) LIKE LOWER('%${searchKeyword}%')
													</if>
												</where>
											</if>
											ORDER BY notice_no ) inner_table
						WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
	 

	<!-- SQL : SELECT ROW Count -->	 
	 <select  id="getTotalCount"  parameterType="search"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT notice_title , notice_content , notice_regdate
						FROM notice
						<if test="searchCondition != null">
							<where>
								<if test="searchCondition == 0 and searchKeyword !='' ">
						 			notice_title = #{searchKeyword}
								</if>
								<if test="searchCondition == 1 and searchKeyword !='' ">
						 		notice_content = #{searchKeyword}
								</if>
							</where>
						</if> ) countTable						
	 </select>
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	<!-- 특정 모임의 공지사항 등록 -->
	<insert id="addClubNotice" parameterType="map">
		INSERT INTO NOTICE( NOTICE_NO, NOTICE_TITLE, NOTICE_CONTENT, NOTICE_IMAGE1, NOTICE_IMAGE2, NOTICE_REGDATE, NOTICE_COUNT, CLUB_NO, USER_ID)
		VALUES ( seq_notice_no.nextval, #{notice.noticeTitle},  #{notice.noticeContent}, #{notice.noticeImage1}, #{notice.noticeImage2}, SYSDATE, #{notice.noticeCount}, #{notice.clubNo}, #{notice.userId.userId} )
	</insert>
	
	
	
	<!-- 가장 최신 모임게시물 댓글 번호 가져온다 -->
	<select id="getClubNoticetNo" resultType="int">
		SELECT V1.NOTICE_NO
		FROM ( SELECT *
				FROM NOTICE
				WHERE CLUB_NO = #{ notice.clubNo }
				ORDER BY NOTICE_REGDATE DESC ) V1
		WHERE ROWNUM = 1
	</select>
	
		

	<!-- 특정 모임의 공지사항 리스트 -->
	<select id="getClubNoticeList" parameterType="map" resultMap="noticeSelectMap">
		SELECT V3.*
		FROM ( SELECT ROW_NUMBER() OVER(ORDER BY NOTICE_NO DESC) AS R, V2.*
				FROM ( SELECT *
						FROM NOTICE
						<where>
							CLUB_NO = 
							<choose>
								<when test="userId != null and userId != ''">
								( SELECT V1.CLUB_NO
												FROM ( SELECT *
														FROM CLUB
														WHERE USER_ID = #{ userId }
														ORDER BY CLUB_REG_DATE DESC )V1
												WHERE ROWNUM = 1 )
								</when>
								<otherwise>#{ notice.clubNo }</otherwise>
							</choose>
						</where>
						ORDER BY NOTICE_REGDATE
						<choose>
							<when test="search.order == 1">ASC</when>
							<otherwise>DESC</otherwise>
						</choose>
					) V2
			) V3
		WHERE R BETWEEN ((#{ search.currentPage }-1)*#{ search.pageSize }+1) AND #{ search.currentPage }*#{ search.pageSize }
	</select>
	
	

	<!-- 특정 모임의 공지사항 리스트 개수 -->
	<select id="getClubNoticeListCount" parameterType="map" resultType="int">
		SELECT COUNT(*) FROM NOTICE WHERE CLUB_NO = #{ notice.clubNo } ORDER BY NOTICE_REGDATE DESC
	</select>
	
	

	<!-- 특정 모임의 공지사항 상세보기 -->
	<select id="getClubNotice" parameterType="notice" resultMap="noticeSelectMap">
		SELECT *
		FROM NOTICE
		WHERE NOTICE_NO = #{ noticeNo }
	</select>
	
	
	
	<!-- 특정 모임의 공지사항 수정 -->
	<update id="updateClubNotice" parameterType="map">
		UPDATE NOTICE SET NOTICE_TITLE = #{ notice.noticeTitle }, NOTICE_CONTENT = #{ notice.noticeContent }
		WHERE NOTICE_NO = #{ notice.noticeNo }
	</update>
	
	
	
	<!-- 특정 모임의 공지사항 삭제 -->
	<delete id="deleteClubNotice" parameterType="map">
		DELETE FROM NOTICE
		WHERE NOTICE_NO = #{ notice.noticeNo }
	</delete>


</mapper>


