<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  						
<mapper namespace="UserMapper">



	<resultMap	id="userSelectMap" type="user">
		<result property="userId" 		column="user_id" 		jdbcType="VARCHAR"/>
		<result property="password" 	column="password" 		jdbcType="VARCHAR" />
		<result property="name"		column="name" 		jdbcType="VARCHAR" />
		<result property="rrn" 			column="rrn" 			jdbcType="VARCHAR" />
		<result property="gender" 		column="gender" 			jdbcType="VARCHAR" />
		<result property="phoneNo" 		column="phone_no" 	jdbcType="NUMBER" />
		<result property="email" 		column="email" 			jdbcType="VARCHAR" />
		<result property="role" 		column="role" 			jdbcType="CHAR" />
		<result property="nickName" 	column="nickname" 			jdbcType="VARCHAR" />
		<result property="profileImage" 		column="profile_image" 		jdbcType="VARCHAR" />
		<result property="profileWriting" 		column="profile_writing" 		jdbcType="VARCHAR" />
		<result property="area1" 		column="area1" 		jdbcType="VARCHAR" />
		<result property="area2" 		column="area2" 		jdbcType="VARCHAR" />
		<result property="area3" 		column="area3" 		jdbcType="VARCHAR" />
		<result property="category1" 		column="category1" 		jdbcType="VARCHAR" />
		<result property="category2" 		column="category2" 		jdbcType="VARCHAR" />
		<result property="category3" 		column="category3" 		jdbcType="VARCHAR" />
		<result property="penaltyType" 		column="penalty_type" 		jdbcType="CHAR" />
		<result property="reportCount" 		column="report_count" 		jdbcType="NUMBER" />
		<result property="stopStartDate" 		column="stop_start_date" 		jdbcType="DATE" />
		<result property="stopEndDate" 		column="stop_end_date" 		jdbcType="DATE" />
		<result property="outUserState" 		column="out_user_state" 		jdbcType="CHAR" />
		<result property="outUserDate" 		column="out_user_date" 		jdbcType="DATE" />
		<result property="addUserType" 		column="out_user_type" 		jdbcType="CHAR" />
		<result property="logoutDate" 		column="logout_date" 		jdbcType="DATE" />
		<result property="addUserDate" 		column="add_user_date" 		jdbcType="DATE" />
		<result property="totalVisitCount" 		column="total_visit_count" 		jdbcType="NUMBER" />
		<result property="openCondition" 		column="open_condition" 		jdbcType="CHAR" />
		<result property="pushCondition" 		column="push_condition" 		jdbcType="CHAR" />
		<result property="joinClubCount" 		column="join_club_count" 		jdbcType="NUMBER" />
		<result property="joinClubLimit" 		column="join_club_limit" 		jdbcType="NUMBER" />
	</resultMap>

	<sql id="select-list">
		SELECT
		user_id		, password 	, name	 	, gender, rrn, phone_no	, email, role, nickname	, 
		profile_image, profile_writing, area1, area2, area3, category1, category2, category3, 
		penalty_type, report_count, stop_start_date, stop_end_date, out_user_state, out_user_date, 
		add_user_type, logout_date, add_user_date, total_visit_count, open_condition, push_condition, 
		join_club_count, join_club_limit
		FROM users
		<where>
		<if test="(searchCondirion == 0 and searchKeyword == '') or (searchCondirion == 0 and searchKeyword != '')" >
		user_id = LIKE(#{searchKeyword}||'%')
		</if>
		<if test="(searchCondirion == 0 and searchKeyword == '') or (searchCondirion == 0 and searchKeyword != '')" >
		nickname = LIKE(#{searchKeyword}||'%')
		</if>
		</where>
	</sql>


	<insert		id="addUser"		parameterType="user" >
	 	INSERT
		INTO users	(	
						user_id, password, name, gender, rrn, phone_no, email, nickname, profile_writing,
						area1, area2, area3, category1, category2, category3, add_user_date	
					) 
		VALUES		(	
						#{userId}, #{password:VARCHAR}, #{name:VARCHAR}, #{gender:VARCHAR}, #{rrn:NUMBER}, 
						#{phoneNo:NUMBER}, #{email:VARCHAR}, #{nickName:VARCHAR}, #{profileWriting:VARCHAR} , 
						#{area1:VARCHAR} , #{area2:VARCHAR} , #{area3:VARCHAR} , #{category1:VARCHAR} , 
						#{category2:VARCHAR} , #{category3:VARCHAR} , SYSDATE 
					)
	</insert>

	<insert		id="addSnsUser"		parameterType="user" >
	 	INSERT
		INTO users	(	
						user_id, add_user_type,	add_user_date	
					) 
		VALUES		(	
						#{userId}, #{addUserType:CHAR}, SYSDATE 
					)
	</insert>



	<select		id="getUser"		parameterType="string"			resultMap="userSelectMap">
		SELECT
		user_id		, password 	, name	 	, gender, rrn, phone_no	, email, role, nickname	, profile_image, 
		profile_writing, area1, area2, area3, category1, category2, category3, penalty_type, report_count, 
		stop_start_date, stop_end_date, out_user_state, out_user_date, add_user_type, logout_date, add_user_date, 
		total_visit_count, open_condition, push_condition, join_club_count, join_club_limit
		FROM users
		Where user_id = #{userId}
	</select>
	
	<update	id="updateUser"	parameterType="user" >
	   	UPDATE users
	   	<set>
	   		password 	= #{password:VARCHAR}	,
			email		= #{email:VARCHAR}
	   	</set>
	   	WHERE user_id = #{userId}
	 </update>

	<update	id="updatePhoneNo"	parameterType="user" >
	   	UPDATE users
	   	<set>
	   		phone_no 	= #{phoneNo:NUMBER}	,
	   	</set>
	   	WHERE user_id = #{userId}
	 </update>

	<update	id="updatePassword"	parameterType="user" >
	   	UPDATE users
	   	<set>
	   		password 	= #{password:VARCHAR}	,
	   	</set>
	   	WHERE user_id = #{userId}
	 </update>
	 
	 <update id="updateProfil" parameterType="user">
	 	UPDATE users
	 	<set>
	 		nickname	= #{nickName:VARCHAR}	,
	 		gender		= #{gender:VARCHAR}		,
	 		area1		= #{area1:VARCHAR}
	 		area2		= #{area2:VARCHAR}
	 		area3		= #{area3:VARCHAR}
	 		category1	= #{category1:VARCHAR}	,
	 		category2	= #{category2:VARCHAR}	,
	 		category3	= #{category3:VARCHAR}	,
	 		profile_image	= #{profileImage:VARCHAR}	,
	 		profile_writing	= #{profileWriting:VARCHAR}
	 	</set>
	 	WHERE user_id = #{userId}
	 </update>
	 
	 <update id="deleteUser" parameterType="user">
	 	UPDATE users
	 	<set>
	 		out_user_state	= #{outUserState:CHAR}, 
	 		out_user_date	= #{outUserDate:DATE}
	 	</set>
	 	WHERE user_id = #{userId}
	 </update>
	 
	 <update id="updateLogoutDate" parameterType="user">
	 	UPDATE users
	 	<set>
	 		logout_date	= #{logoutDate:DATE}
	 	</set>
	 	WHERE user_id = #{userId}
	 </update>
	 
	 <update id="updateReportCount" parameterType="user">
	 	UPDATE users
	 	<set>
	 		report_count	= #{repotCount:CHAR}
	 	</set>
	 	WHERE user_id = #{userId}
	 </update>
	 
	 <update id="updateStopStartDate" parameterType="user">
	 	UPDATE users
	 	<set>
	 		stop_start_date	= #{stopStartDate:DATE}
	 	</set>
	 	WHERE user_id = #{userId}
	 </update>
	 
	 <update id="updatePenaltyType" parameterType="user">
	 	UPDATE users
	 	<set>
	 		penalty_type	= #{penaltyType:CHAR}
	 	</set>
	 	WHERE user_id = #{userId}
	 </update>
	 
	 <update id="updateVisitCount" parameterType="user">
	 	UPDATE users
	 	<set>
	 		total_visit_count	= #{totalVisitCount:NUMBER}
	 	</set>
	 	WHERE user_id = #{userId}
	 </update>
	 
	 <update id="updateOpenCondition" parameterType="user">
	 	UPDATE users
	 	<set>
	 		open_condition	= #{openCondition:CHAR}
	 	</set>
	 	WHERE user_id = #{userId}
	 </update>
	 
	 <update id="updatePushCondition" parameterType="user">
	 	UPDATE users
	 	<set>
	 		push_condition	= #{pushCondition:CHAR}
	 	</set>
	 	WHERE user_id = #{userId}
	 </update>
	 
	 <update id="updateJoinClubCount" parameterType="user">
	 	UPDATE users
	 	<set>
	 		join_club_count	= #{joinClubCount:NUMBER}
	 	</set>
	 	WHERE user_id = #{userId}
	 </update>
	 
	 <update id="updateJoinClubLimit" parameterType="user">
	 	UPDATE users
	 	<set>
	 		join_club_limit	= #{joinClubLimit:NUMBER}
	 	</set>
	 	WHERE user_id = #{userId}
	 </update>
	 
	 <select  id="getUserList"  parameterType="int"	resultMap="userSelectMap">
	  	SELECT inner_table.*
	  	FROM (	
	  			SELECT
	  			deep_table.* 				,
	  			ROWNUM 			AS row_seq	
	  			FROM		(
	  							SELECT 
	  							user_id		, 
	  							user_name	,
	  							email
								FROM users
								<if test="searchCondition != null">
									<where>
										<if test="searchCondition == 0 and searchKeyword !='' ">
							 				LOWER(user_id) LIKE LOWER('%${searchKeyword}%')
										</if>
										<if test="searchCondition == 1 and searchKeyword !='' ">
							 				LOWER(user_name) LIKE LOWER('%${searchKeyword}%')
										</if>
									</where>
								</if>
								ORDER BY user_id 
													) deep_table
				WHERE ROWNUM &lt;= #{endRowNum} 					) inner_table
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
	 
	 
	 
	 <select  id="getTotalCount"  parameterType="int"	 resultType="int">
	  	SELECT
	  	COUNT(*)
	  	FROM (
	  			SELECT 
	  			user_id , 
	  			user_name , 
	  			email
				FROM users
					<if test="searchCondition != null">
						<where>
							<if test="searchCondition == 0 and searchKeyword !='' ">
					 			LOWER(user_id) LIKE LOWER('%${searchKeyword}%')
							</if>
							<if test="searchCondition == 1 and searchKeyword !='' ">
					 			LOWER(user_name) LIKE LOWER('%${searchKeyword}%')
							</if>
						</where>
					</if> 	) countTable						
	 </select>
	 
</mapper>