<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  						
<mapper namespace="ClubPostMapper">



	<resultMap	id="clubPostSelectMap" type="com.link.service.domain.ClubPost">
		<result property="clubNo" 					column="club_no" 					jdbcType="NUMERIC"/>
		<result property="clubPostNo"				column="club_post_no" 				jdbcType="NUMERIC"/>
		<result property="user.userId" 				column="user_id" 					jdbcType="VARCHAR"/>
		<result property="clubPostTitle" 			column="club_post_title" 			jdbcType="VARCHAR"/>
		<result property="clubPostContent" 			column="club_post_content" 			jdbcType="VARCHAR"/>
		<result property="clubPostVideo1" 			column="club_post_video1" 			jdbcType="VARCHAR"/>
		<result property="clubPostVideo2" 			column="club_post_video2" 			jdbcType="VARCHAR"/>
		<result property="clubPostVideo3" 			column="club_post_video3" 			jdbcType="VARCHAR"/>
		<result property="clubPostRegDate" 			column="club_post_reg_date" 		jdbcType="VARCHAR"/>
		<result property="clubPostUpdateDate" 		column="club_post_update_date" 		jdbcType="VARCHAR"/>
		<result property="clubPostLikeCount" 		column="club_post_like_count" 		jdbcType="NUMERIC"/>
		<result property="clubPostCommentCount" 	column="club_post_comment_count" 	jdbcType="NUMERIC"/>
		<result property="image1" 					column="image1" 					jdbcType="VARCHAR"/>
		<result property="image2" 					column="image2" 					jdbcType="VARCHAR"/>
		<result property="image3" 					column="image3" 					jdbcType="VARCHAR"/>
		<result property="image4" 					column="image4" 					jdbcType="VARCHAR"/>
		<result property="image5" 					column="image5" 					jdbcType="VARCHAR"/>
		<result property="image6" 					column="image6" 					jdbcType="VARCHAR"/>
		<result property="image7" 					column="image7" 					jdbcType="VARCHAR"/>
		<result property="image8" 					column="image8" 					jdbcType="VARCHAR"/>
		<result property="image9" 					column="image9" 					jdbcType="VARCHAR"/>
		<result property="image10" 					column="image10" 					jdbcType="VARCHAR"/>
	</resultMap>



	<resultMap id="clubPostCommentSelectMap" type="com.link.service.domain.Comment">
		<result property="clubPostCommentNo"		column="club_post_comment_no" 		jdbcType="NUMERIC"/>
		<result property="clubPostNo"				column="club_post_no" 				jdbcType="NUMERIC"/>
		<result property="user.userId" 				column="user_id" 					jdbcType="VARCHAR"/>
		<result property="commentContent" 			column="comment_content" 			jdbcType="VARCHAR"/>
		<result property="commentRegDate" 			column="comment_reg_date" 			jdbcType="DATE"/>
		<result property="commentUpdateDate" 		column="comment_update_date" 		jdbcType="DATE"/>
		<result property="commentLikeCount" 		column="comment_like_count" 		jdbcType="NUMERIC"/>
		<result property="commentCount" 			column="comment_count" 				jdbcType="NUMERIC"/>
		<result property="reportCondition" 			column="report_condition" 			jdbcType="VARCHAR"/>
		<result property="deleteCondition" 			column="delete_condition" 			jdbcType="VARCHAR"/>
		<result property="parent" 					column="parent" 					jdbcType="NUMERIC"/>
		<result property="depth" 					column="depth" 						jdbcType="NUMERIC"/>
		<result property="sequence" 				column="sequence" 					jdbcType="NUMERIC"/>
	</resultMap>



	<!-- 모임게시물 등록 -->
	<insert id="addClubPost" parameterType="com.link.service.domain.ClubPost">
	 	INSERT INTO CLUB_POST (CLUB_POST_NO, CLUB_NO, USER_ID, CLUB_POST_TITLE, CLUB_POST_CONTENT, CLUB_POST_VIDEO1, CLUB_POST_VIDEO2, 
		CLUB_POST_VIDEO3, CLUB_POST_REG_DATE, CLUB_POST_UPDATE_DATE, CLUB_POST_LIKE_COUNT, CLUB_POST_COMMENT_COUNT, REPORT_CONDITION,
		DELETE_CONDITION, IMAGE1, IMAGE2, IMAGE3, IMAGE4, IMAGE5, IMAGE6, IMAGE7, IMAGE8, IMAGE9, IMAGE10)
		VALUES (seq_club_post_no.NEXTVAL, #{clubNo}, #{user.userId}, #{clubPostTitle}, #{clubPostContent:VARCHAR},
		#{clubPostVideo1:VARCHAR}, #{clubPostVideo2:VARCHAR}, #{clubPostVideo3:VARCHAR}, sysdate, null, 0, 0, '0', '0',
		#{image1}, #{image2:VARCHAR}, #{image3:VARCHAR}, #{image4:VARCHAR}, #{image5:VARCHAR}, #{image6:VARCHAR},
		#{image7:VARCHAR}, #{image8:VARCHAR}, #{image9:VARCHAR}, #{image10:VARCHAR})
	</insert>
	
	
	
	<!-- 모임게시물 탭 클릭시 => 최근 가입한 모임의 모임게시물리스트 가져온다 -->
	<select id="getCurrentClubPostList" parameterType="string" resultMap="clubPostSelectMap">
		SELECT CLUB_POST_NO, IMAGE1, CLUB_POST_TITLE, USER_ID, CLUB_POST_LIKE_COUNT
		FROM CLUB_POST
		WHERE CLUB_NO = ( SELECT V2.CLUB_NO
							FROM ( SELECT ROWNUM, V1.*
									FROM ( SELECT *
											FROM CLUB
											WHERE USER_ID = #{ userId }
											ORDER BY CLUB_REG_DATE DESC ) V1
									WHERE ROWNUM = 1 ) V2 )
		AND REPORT_CONDITION = '0' AND DELETE_CONDITION = '0'
		ORDER BY CLUB_POST_REG_DATE DESC
	</select>
	
	
	
	<!-- 모임게시물 탭 클릭시 => 최근 가입한 모임의 모임게시물리스트의 개수 가져온다 -->
	<select id="getCurrentClubPostListCount" parameterType="string" resultType="int">
		SELECT COUNT(*)
		FROM CLUB_POST
		WHERE CLUB_NO= ( SELECT V2.CLUB_NO
							FROM ( SELECT ROWNUM, V1.*
									FROM ( SELECT *
											FROM CLUB
											WHERE USER_ID = #{ userId }
											ORDER BY CLUB_REG_DATE DESC ) V1
									WHERE ROWNUM = 1 ) V2 )
		AND REPORT_CONDITION = '0' AND DELETE_CONDITION = '0'
	</select>
	
	
	
	<!-- 모임게시물에서 최신순 클릭시 => 최신순 모임게시물 리스트 -->
	<select id="getClubPostList" parameterType="clubPost" resultMap="clubPostSelectMap">
		SELECT CLUB_POST_NO, IMAGE1, CLUB_POST_TITLE, USER_ID, CLUB_POST_LIKE_COUNT
		FROM CLUB_POST
		WHERE CLUB_NO = #{ clubNo } AND REPORT_CONDITION = '0' AND DELETE_CONDITION = '0'
		ORDER BY CLUB_POST_REG_DATE DESC
	</select>
	
	
	
	<!-- 모임게시물에서 좋아요 많은순 클릭시 => 좋아요 많은순 모임게시물 리스트 -->
	<select id="getClubPostListLike" parameterType="int" resultMap="clubPostSelectMap">
		SELECT CLUB_POST_NO, IMAGE1, CLUB_POST_TITLE, USER_ID, CLUB_POST_LIKE_COUNT
		FROM CLUB_POST
		WHERE CLUB_NO = #{ clubNo } AND REPORT_CONDITION = '0' AND DELETE_CONDITION = '0'
		ORDER BY CLUB_POST_LIKE_COUNT DESC, CLUB_POST_REG_DATE DESC
	</select>
	
	
	
	<!-- 최신순, 좋아요 많은 순 모임게시물 개수 -->
	<select id="getClubPostListCount" parameterType="clubPost" resultType="int">
		SELECT COUNT(*) FROM CLUB_POST WHERE CLUB_NO = #{ clubNo } AND REPORT_CONDITION = '0' AND DELETE_CONDITION = '0'
	</select>
	
	
	
	<!-- 특정 모임에서 내가 작성한 모임게시물 리스트 -->
	<select id="getClubPostListMySelf" parameterType="map" resultMap="clubPostSelectMap">
		SELECT CLUB_POST_NO, IMAGE1, CLUB_POST_TITLE, USER_ID, CLUB_POST_LIKE_COUNT
		FROM CLUB_POST
		WHERE USER_ID = #{ userId } AND CLUB_NO = #{ clubNo } AND REPORT_CONDITION = '0' AND DELETE_CONDITION = '0'
	</select>
	
	
	
	<!-- 특정 모임에서 내가 작성한 모임게시물 리스트 개수 -->
	<select id="getClubPostListMySelfCount" parameterType="map" resultType="int">
		SELECT COUNT(*)
		FROM CLUB_POST
		WHERE USER_ID = #{ userId } AND CLUB_NO = #{ clubNo } AND REPORT_CONDITION = '0' AND DELETE_CONDITION = '0'
	</select>
	
	
	
	<!-- 모임게시물 상세보기 -->
	<select id="getClubPost" parameterType="clubPost" resultMap="clubPostSelectMap">
		SELECT CLUB_POST_NO, CLUB_NO, USER_ID, CLUB_POST_TITLE, CLUB_POST_CONTENT, CLUB_POST_VIDEO1, CLUB_POST_VIDEO2, 
		CLUB_POST_VIDEO3, CLUB_POST_REG_DATE, CLUB_POST_UPDATE_DATE, CLUB_POST_LIKE_COUNT, CLUB_POST_COMMENT_COUNT, IMAGE1,
		IMAGE2, IMAGE3, IMAGE4, IMAGE5, IMAGE6, IMAGE7, IMAGE8, IMAGE9, IMAGE10
		FROM CLUB_POST
		WHERE CLUB_POST_NO = #{ clubPostNo }
	</select>
	
	
	
	<!-- 수정하는 모임게시물 -->
	<update id="updateClubPost" parameterType="clubPost">
		UPDATE CLUB_POST SET CLUB_POST_TITLE = #{ clubPostTitle }, CLUB_POST_CONTENT = #{ clubPostContent },
		CLUB_POST_VIDEO1 = #{ clubPostVideo1 }, CLUB_POST_VIDEO2 = #{ clubPostVideo2 }, CLUB_POST_VIDEO3 = #{ clubPostVideo3 },
		CLUB_POST_UPDATE_DATE = sysdate, IMAGE1 = #{ image1 }, IMAGE2 = #{ image2 }, IMAGE3 = #{ image3 }, IMAGE4 = #{ image4 },
		IMAGE5 = #{ image5 }, IMAGE6 = #{ image6 }, IMAGE7 = #{ image7 }, IMAGE8 = #{ image8 }, IMAGE9 = #{ image9 }, IMAGE10 = #{ image10 }
		WHERE CLUB_POST_NO = 20
	</update>
	
	
	
	<!-- 삭제하는 모임게시물 -->
	<update id="deleteClubPost" parameterType="clubPost">
		UPDATE CLUB_POST SET DELETE_CONDITION = '1' WHERE CLUB_POST_NO = #{ clubPostNo }
	</update>
	
	
	
	<!-- 모임게시물 좋아요하다/좋아요취소하다 -->
	<update id="updateClubPostLike" parameterType="heart">
		UPDATE CLUB_POST
		<set>
			<if test="likeCondition == 1">
				 CLUB_POST_LIKE_COUNT = CLUB_POST_LIKE_COUNT + 1
			</if>
			<if test="likeCondition == -1">
				 CLUB_POST_LIKE_COUNT = CLUB_POST_LIKE_COUNT - 1
			</if>
		</set>
		WHERE CLUB_POST_NO = #{ clubPostNo }
	</update>
	
	
	
	<!-- 마이홈피 - 내가 작성한 모임게시물 리스트 -->
	<select id="getClubPostListMyHome" parameterType="string" resultMap="clubPostSelectMap">
		SELECT CLUB_POST_NO, IMAGE1, CLUB_POST_TITLE, USER_ID, CLUB_POST_LIKE_COUNT
		FROM CLUB_POST
		WHERE USER_ID = #{ userId } AND REPORT_CONDITION = '0' AND DELETE_CONDITION = '0'
		ORDER BY CLUB_POST_REG_DATE DESC
	</select>
	
	
	
	<!-- 마이홈피 - 내가 작성한 모임게시물 리스트 개수 -->
	<select id="getClubPostListMyHomeCount" parameterType="string" resultType="int">
		SELECT COUNT(*) FROM CLUB_POST WHERE USER_ID = #{ userId } AND REPORT_CONDITION = '0' AND DELETE_CONDITION = '0'
	</select>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	

	
	<!-- 결제추가 -->
	<insert id="addPay" parameterType="pay">
		INSERT INTO PAY (PAY_NO, USER_ID, CLUB_NO, PAY_PRODUCT, PAY_OPTION, TOTAL_PRICE, PAY_REG_DATE, UPDATE_CLUB_COUNT, UPDATE_CLUB_MEMBER_COUNT, MERCHANT_UID)
		VALUES (seq_pay_no.NEXTVAL, #{ user.userId }, #{ clubNo }, #{ payOption }, #{ payProduct }, #{ totalPrice }, SYSDATE, #{ updateClubCount }, #{ updateClubMemberCount }, #{ merchant_uid })
	</insert>
	
	
		
	<!-- <update id="updateClubMember" parameterType="pay">
		UPDATE CLUB
		<set>
			CLUB_MAX_MEMBER = CLUB_MAX_MEMBER + #{ updateClubMemberCount }
		</set>
		<where>
		CLUB_NO = #{ clubNo }
		</where>
	</update> -->
	
	
	
	<!-- <update id="updateClub" parameterType="pay">
		UPDATE USERS
		<set>
		JOIN_CLUB_LIMIT = JOIN_CLUB_LIMIT + #{ updateClubCount }
		</set>
		<where>
		USER_ID = #{ user.userId }
		</where>
	</update> -->
	
	
	 
</mapper>


